module Test.Generated.Main1662723256 exposing (main)

import Generator.AnnotatedArgTests
import Generator.DocCommentTests
import Generator.EnumTests
import Generator.FieldTests
import Generator.ImportsTests
import Generator.InputObjectLoopsTests
import Generator.ModuleNameTests
import Generator.NormalizeTests
import Generator.OptionalArgsTests
import Generator.RequiredArgsTests
import Generator.TypeLockDefinitionsTests
import Parser.DecodeTests
import TypeKindTests
import TypeTests

import Test.Reporter.Reporter exposing (Report(..))
import Console.Text exposing (UseColor(..))
import Test.Runner.Node
import Test
import Json.Encode

main : Test.Runner.Node.TestProgram
main =
    [     Test.describe "Generator.AnnotatedArgTests" [Generator.AnnotatedArgTests.all],     Test.describe "Generator.DocCommentTests" [Generator.DocCommentTests.all],     Test.describe "Generator.EnumTests" [Generator.EnumTests.all],     Test.describe "Generator.FieldTests" [Generator.FieldTests.all],     Test.describe "Generator.ImportsTests" [Generator.ImportsTests.all],     Test.describe "Generator.InputObjectLoopsTests" [Generator.InputObjectLoopsTests.all],     Test.describe "Generator.ModuleNameTests" [Generator.ModuleNameTests.all],     Test.describe "Generator.NormalizeTests" [Generator.NormalizeTests.all],     Test.describe "Generator.OptionalArgsTests" [Generator.OptionalArgsTests.all],     Test.describe "Generator.RequiredArgsTests" [Generator.RequiredArgsTests.all],     Test.describe "Generator.TypeLockDefinitionsTests" [Generator.TypeLockDefinitionsTests.all],     Test.describe "Parser.DecodeTests" [Parser.DecodeTests.all],     Test.describe "TypeKindTests" [TypeKindTests.all],     Test.describe "TypeTests" [TypeTests.all] ]
        |> Test.concat
        |> Test.Runner.Node.runWithOptions { runs = Nothing, report = (ConsoleReport Monochrome), seed = Nothing, processes = 48, paths = []}